rule webshell_java_behinder_shellservice
{
    meta:
        author = "threatintel@volexity.com"
        description = "Looks for artifacts generated (generally seen in .class files) related to the Behinder webshell."
        date = "2022-03-18"
        hash1 = "9a9882f9082a506ed0fc4ddaedd50570c5762deadcaf789ac81ecdbb8cf6eff2"
        os = "win,linux"
        os_arch = "all"
        reference = "https://github.com/MountCloud/BehinderClientSource/blob/master/src/main/java/net/rebeyond/behinder/core/ShellService.java"
        scan_context = "file,memory"
        severity = "critical"
        last_modified = "2024-07-30T09:09:06Z"
        license = "See license at https://github.com/volexity/threat-intel/blob/main/LICENSE.txt"
        rule_id = 6615
        version = 3

    strings:
        $s1 = "CONNECT" ascii fullword
        $s2 = "DISCONNECT" ascii fullword
        $s3 = "socket_" ascii fullword
        $s4 = "targetIP" ascii fullword
        $s5 = "targetPort" ascii fullword
        $s6 = "socketHash" ascii fullword
        $s7 = "extraData" ascii fullword

    condition:
        all of them
}
rule susp_java_encoding_and_classloader
{
    meta:
        author = "threatintel@volexity.com"
        description = "Identifies suspicious java-based files which have all the ingredients required for a webshell which expects the attacker to provide a Class to load in memory."
        date = "2022-04-07"
        hash1 = "0d5dc54ef77bc18c4c5582dca4619905605668cffcccc3829e43c6d3e14ef216"
        os = "win,linux"
        os_arch = "all"
        scan_context = "file"
        severity = "high"
        last_modified = "2024-07-30T09:19:16Z"
        license = "See license at https://github.com/volexity/threat-intel/blob/main/LICENSE.txt"
        rule_id = 6688
        version = 3

    strings:
        $s1 = "javax.crypto.spec.SecretKeySpec" ascii
        $s2 = "java/security/SecureClassLoader" ascii
        $s3 = "sun.misc.BASE64Decoder" ascii

    condition:
        filesize < 50KB and
        all of them
}
rule webshell_php_str_replace_create_func
{
    meta:
        author = "threatintel@volexity.com"
        description = "Looks for obfuscated PHP shells where create_function() is obfuscated using str_replace and then called using no arguments."
        date = "2022-04-04"
        hash1 = "c713d13af95f2fe823d219d1061ec83835bf0281240fba189f212e7da0d94937"
        os = "win,linux"
        os_arch = "all"
        scan_context = "file"
        severity = "high"
        last_modified = "2024-07-30T08:38:25Z"
        license = "See license at https://github.com/volexity/threat-intel/blob/main/LICENSE.txt"
        rule_id = 6675
        version = 4

    strings:
        // $P=str_replace(
        $s = "=str_replace(" ascii
        // call it as a function
        // $S=$P('',$a);
        $anon_func = "(''," ascii

    condition:
        filesize < 100KB and
        uint32be(0) == 0x3c3f7068 and
        for any i in (1..#s):
            (
                for any j in (1..#anon_func):
                    (
                        uint16be(@s[i]-2) == uint16be(@anon_func[j]-2)
                    )
            )
}
rule malware_golang_pantegana
{
    meta:
        author = "threatintel@volexity.com"
        description = "Detects PANTEGANA, a Golang backdoor used by a range of threat actors due to its public availability."
        date = "2022-03-30"
        hash1 = "8297c99391aae918f154077c61ea94a99c7a339166e7981d9912b7fdc2e0d4f0"
        os = "all"
        os_arch = "all"
        reference = "https://github.com/elleven11/pantegana"
        scan_context = "file,memory"
        severity = "high"
        last_modified = "2025-03-21T10:36:48Z"
        license = "See license at https://github.com/volexity/threat-intel/blob/main/LICENSE.txt"
        rule_id = 6631
        version = 3

    strings:
        $s1 = "RunFingerprinter" ascii
        $s2 = "SendSysInfo" ascii
        $s3 = "ExecAndGetOutput" ascii
        $s4 = "RequestCommand" ascii
        $s5 = "bindataRead" ascii
        $s6 = "RunClient" ascii

        $magic = "github.com/elleven11/pantegana" ascii

    condition:
        5 of ($s*) or
        $magic
}
rule malware_any_pupyrat_b
{
    meta:
        author = "threatintel@volexity.com"
        description = "Detects the PUPYRAT malware family, a cross-platform RAT written in Python."
        date = "2022-04-07"
        hash1 = "7474a6008b99e45686678f216af7d6357bb70a054c6d9b05e1817c8d80d536b4"
        os = "all"
        os_arch = "all"
        reference = "https://github.com/n1nj4sec/pupy"
        scan_context = "file,memory"
        severity = "critical"
        last_modified = "2025-03-21T10:30:20Z"
        license = "See license at https://github.com/volexity/threat-intel/blob/main/LICENSE.txt"
        rule_id = 6689
        version = 4

    strings:
        $elf1 = "LD_PRELOAD=%s HOOK_EXIT=%d CLEANUP=%d exec %s 1>/dev/null 2>/dev/null" ascii
        $elf2 = "reflective_inject_dll" fullword ascii
        $elf3 = "ld_preload_inject_dll" fullword ascii

        $pupy1 = "_pupy.error" ascii
        $pupy2 = "pupy://" ascii

        $s1 = "Args not passed" ascii
        $s2 = "Too many args" ascii
        $s3 = "Can't execute" ascii
        $s4 = "mexec:stdin" ascii
        $s5 = "mexec:stdout" ascii
        $s6 = "mexec:stderr" ascii
        $s7 = "LZMA error" ascii

    condition:
        any of ($elf*) or
        all of ($pupy*) or
        all of ($s*)
}
rule susp_php_fileinput_eval
{
    meta:
        author = "threatintel@volexity.com"
        description = "Rule designed to detect PHP files which use file_get_contents() and then shortly afterwards use an eval statement."
        date = "2021-06-16"
        hash1 = "1a34c43611ee310c16acc383c10a7b8b41578c19ee85716b14ac5adbf0a13bd5"
        hash2 = "6e8874c756c009c63f715a44ca72d0cb31dc25d87d7df6ca2830fe8330580342"
        os = "win,linux"
        os_arch = "all"
        scan_context = "file"
        severity = "high"
        last_modified = "2024-12-12T11:17:16Z"
        license = "See license at https://github.com/volexity/threat-intel/blob/main/LICENSE.txt"
        rule_id = 5581
        version = 5

    strings:
        $s1 = "file_get_contents(\"php://input\")"
        $s2 = "eval("

    condition:
        $s2 in (@s1[1]..(@s1[1]+512))
}
rule susp_php_call_user_func
{
    meta:
        author = "threatintel@volexity.com"
        description = "Webshells using call_user_func() function against an object from a file input or POST variable."
        date = "2021-06-16"
        hash1 = "40b053a2f3c8f47d252b960a9807b030b463ef793228b1670eda89f07b55b252"
        os = "win,linux"
        os_arch = "all"
        reference = "https://zhuanlan.zhihu.com/p/354906657"
        scan_context = "file"
        severity = "high"
        last_modified = "2024-07-30T10:21:42Z"
        license = "See license at https://github.com/volexity/threat-intel/blob/main/LICENSE.txt"
        rule_id = 5582
        version = 4

    strings:
        $s1 = "@call_user_func(new C()" wide ascii

    condition:
        $s1
}
rule webshell_php_icescorpion
{
    meta:
        author = "threatintel@volexity.com"
        description = "Detects the IceScorpion webshell based on decryption routines used in the shell."
        date = "2022-01-17"
        hash1 = "5af4788d1a61009361b37e8db65deecbfea595ef99c3cf920d33d9165b794972"
        os = "all"
        os_arch = "all"
        reference = "https://www.codenong.com/cs106064226/"
        scan_context = "file"
        severity = "high"
        last_modified = "2024-09-20T11:04:50Z"
        license = "See license at https://github.com/volexity/threat-intel/blob/main/LICENSE.txt"
        rule_id = 6374
        version = 4

    strings:
        $s1 = "[$i+1&15];"
        $s2 = "openssl_decrypt"

    condition:
        filesize < 10KB and
        all of them
}
